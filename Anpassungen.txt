interface AutoData <<entity>> {
    + _id?: string
    + __v?: number
    + createdAt?: number
    + updatedAt?: number
    + titel: string
    + rating?: number
    + art?: AutoArt
    + verlag: Verlag
    + preis: number
    + rabatt?: number
    + lieferbar?: boolean
    + datum?: Date
    + isbn: string
    + homepage?: string
    + schlagwoerter?: Array<string>
    + autoren: any
  }

Hier werden all unsere Dokumentationsschritte veröffentlicht.
=======
isbn->seriennummer
verlag->produzent
autoren->produktionswerke
titel->modell


Hier werden all unsere Dokumentationsschritte veröffentlicht.

----------------------------------------------------------------------------------------------------
auto    ->  auto
--------------------------------------------------------------------------------------
(filme ->  autos)     //wurde auch geändert oder?
----------------------------------------------------------------------------------------------------

verlag  ->  hersteller
=======
verlag  ->  produzent
verlage -> produzenten

autoren ->  produtkionswerke
autor   ->  produktionswerk
druckausgabe -> ?? 
kindle  ->  ??
prodnr    ->  seriennummer
titel   ->  model
preis   ->  preis
--------------------------------------------------------------------------------------
/html/index.ts
./neuer-film -> ./neuer-film
/html/neuer-film.ts
Dateinamenänderung neuer-film.ts -> neuer-film.ts
neuesAuto -> neuerFilm
neues-film -> neuer-film
Neues Film -> Neuer Film
/html/suche.ts
AutoService -> FilmService
autoService -> filmService
/rest/film-file.request-handler.ts
AutoFileService -> FilmFileService
AutoFileServiceError -> FilmFileServiceError
AutoNotExists -> FilmNotExists
AutoFileRequestHandler -> FilmFileRequestHandler
kein Film -> keinen Film
/rest/film.request-handler.ts
AutoData -> FilmData
AutoInvalid -> FilmInvalid
AutoServiceError -> FilmServiceError
AutoRequestHandler -> FilmRequestHandler
autoData -> filmData
autoSaved -> filmSaved
----------------------------------------------------------------------------------------------------
FOO_PRODUKTION -> Volkswagen
NO_PRODUKTION -> Ford
BAR_PRODUKTION -> Mercedes

----------------------------------------------------------------------------------------------------

Aufteilung:


Maxi -> backend und kustomize  
Marcel -> restlcient und scripts
Rouven -> src und test
Yannick -> alle Dateien

Maxi -> backend und kustomize
Marcel -> restlcient und scripts
Rouven -> src und test
Yannick -> alle Dateien

[x] Projektplanung mit Project Professional (MIT ANKÜNDIGUNG ABGABETERMINS)
[ ] Kommandos in einer Powershell: hostname und date
[ ] Zeiterfassung mit z.B. einem einfachen Excelsheet
[ ] REST-Schnittstelle einschl. ETags, Location-Header sowie HATEOAS mit Lesen und Schreiben einschl. Validierung
[ ] GraphQL-Schnittstelle mit Lesen und Schreiben
[ ] Visualisierung jeweils von Request und Response
[ ] ESLint, Prettier und SonarQube
[ ] DB-Zugriff (Visualisierung der persistenten Daten nicht vergessen)
[ ] Security (Visualisierung des Zugriffsschutzes nicht vergessen)
[ ] Integrationstests (einschl. 400er Fehler) mit Test-Coverage
[ ] Git
[ ] Hadolint für das eigene Dockerfile
[ ] Eigenes Image in Docker Desktop
[ ] Dive mit dem eigenen Image
[ ] Deployment mit Skaffold oder Kustomize
[ ] Deployment mit Heroku
[ ] Jenkins (ohne Tests)
[ ] Einfache Dokumentation mit AsciiDoctor und PlantUML
[ ] API-Dokumentation mit TypeDoc
[ ] Einfacher Foliensatz mit revealjs